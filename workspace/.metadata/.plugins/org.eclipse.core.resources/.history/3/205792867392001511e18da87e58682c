
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class UI {

	FileReader input;
	BufferedReader inFile;
	String transCode;
	String Code;
	String[] codeIndex = { "CodeIndex1.bin", "CodeIndex2.bin", "CodeIndex3.bin" };
	String[] dataStorage = { "DataStorage1.txt", "DataStorage2.txt", "DataStorage3.txt" };
	DataStorage data;
	CodeIndex index;

	public UI(String fileName, UIoutput output, int i) throws IOException {

		input = new FileReader(fileName);
		inFile = new BufferedReader(input);
		index = new CodeIndex(codeIndex[i]);
		data = new DataStorage(dataStorage[i]);
		index.setupApp();
		output.displayThis("+ + + + + + + + + + + + + +");
		output.displayThis("PROCESSING " + fileName);

		processTrans(output);

	}

	public void finishUp() throws IOException {

		input.close();
		data.finishUp();
		index.finishUp();

	}

	public void processTrans(UIoutput output) throws IOException {

		while (input1Trans()) // loop through the end of the file
		{
			int loc = index.selectByCode(Code);
			if (-1 != loc) {
				// System.out.println(loc);
				// System.out.println(data.readFile(loc));
				output.displayThis("S " + Code + " >> " + data.readFile(loc));
			} else {
				output.displayThis("ERROR - code not found ");
			}
			System.out.println();
			System.out.println();
		}

	}

	public boolean input1Trans() throws IOException {
		String theLine = inFile.readLine();
		// if(theLine.length() != 0)
		if (theLine != null) {
			cleanup(theLine);
			return true;
		} else {
			return false;
		}
	}

	private void cleanup(String theLine) // separate the line to independent
											// String field.
	{
		transCode = theLine.substring(0, 1);

		if (transCode.equals("S")) {
			Code = theLine.substring(2, theLine.length());
		}

	}

}
