import scala.io.Source
import scala.collection.mutable.ListBuffer

/**
 * @author blake
 */

object Setup {

  def main(args: Array[String]) {
    val UIoutput = new UIoutput
    UIoutput.start("-->> SETUP started")
    val indata = new RawData("RawData.csv", UIoutput)

    val outdata = new DataStorage(UIoutput)
    var count = 0

    val lines = new ListBuffer[String]()

    //    while (count < indata.file.length){
    //
    //     println(indata.readline(indata.file(count)))
    //     count = count + 1
    //    }

    UIoutput.displayThis("\n-->> OPENED Backup file")

    outdata.fromraw(indata.file)
    UIoutput.displayThis("\n-->> CLOSED Backup file")

    UIoutput.displayThis("\n-->> SETUP finished â€“ inserted 26 countries into DataStorage")

  }

  def printList(args: List[List[_]]): Unit = {
    args(0).foreach(println)
  }

}

class Node(var countryCode: String, var restOfData: String) {

  var leftChildPtr: Int = -1

  var rightChildPtr: Int = -1

  var id: String = _

  var name: String = _

  var continent: String = _

  var area: String = _

  var population: String = _

  var life: String = _

  cleanUp(restOfData)

  def this(countryCode: String, 
      restOfData: String, 
      leftChildPtr: Int, 
      rightChildPtr: Int) {
    this()
    this.countryCode = countryCode
    this.restOfData = restOfData
    cleanUp(restOfData)
    this.leftChildPtr = leftChildPtr
    this.rightChildPtr = rightChildPtr
  }

  def cleanUp(restOfData: String) {
    val field = restOfData.split(",")
    id = field(0)
    name = field(1)
    continent = field(2)
    area = field(3)
    population = field(4)
    life = field(5)
  }
}



  

  
  
  
  
