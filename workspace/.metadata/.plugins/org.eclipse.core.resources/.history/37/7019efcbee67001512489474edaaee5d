import scala.io.Source
import scala.collection.mutable.ListBuffer

class UIinput(val filename: String, val rawdata: String) {
  
  
  def setup (filename: String, rawdata: String): Unit = {
  val transData = Source.fromFile(filename, "ISO-8859-1").getLines.toList
  val rawList = rawdata.split(",").toList
  filterList(transData,rawList)
  }
  
  
  def filterList(transData: List[_],rawList: List[_]): Unit = {
    var count = 0
    while (count < (transData.length-1)) {
      transData(count).toString().take(1) match {
        case "A" => Aswitch(transData(count).toString(),rawList)
        case "I" => Iswitch(transData(count).toString(),rawList)
        case "S" => Sswitch(transData(count).toString(),rawList)
        case "D" => Dswitch(transData(count).toString(),rawList)
        case broke => "Unexpected case: " + broke.toString
      }
      count = count + 1
    }

  }

  def Aswitch(strTok: String,rawList: List[_]): Unit = {
    //println("SHOW ALL")
  }

  def Iswitch(strTok: String,rawList: List[_]): Unit = {
    //println("INSERT")
  }

  def Sswitch(strTok: String,rawList: List[_]): Unit = {
    
    BSTsearch(rawList,strTok)
  
  }

  def Dswitch(strTok: String,rawList: List[_]): Unit = {
    //println("Delete")
  }

  def BSTsearch(args: List[_], command: String): Unit = {
    val parsecode = command.split(" ")
    val item = parsecode(1).toUpperCase()
    val itemval = item.toList.head.toDouble - 64
    val nums = 1 to args.length
    var first = 1;
    var last = args.length;
    var middle = first + (first + last) / 2;
    var count = 0;
    if (itemval < 0 || itemval > 26) {
      
    printf("\nCountry Code %s not found",item);
    }else{
    while (first <= last) {

      
      count = count + 1

      if (middle == 3 && last == 2) {
        middle = 0;
      } else {
        middle = first + (last - first) / 2;
      }

      if (nums(middle) == itemval) {
        if (item == args(middle)) {

          println()
          printf("DONE: %s = %s",item, args(middle))
          printf("\nNumber of nodes %d", count);
        } else {
          printf("\nCountry Code %s not found",item);
        }
        first = last + 1;

      } else if (nums(middle) < itemval) {
        first = middle + 1;
      } else {
        last = middle - 1;
      }
    }
    }
  }

}