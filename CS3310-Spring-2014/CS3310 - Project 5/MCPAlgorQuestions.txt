Minimum Cost Path Algorithm - some things to think about
  in understanding the algorithm
  [some refer to A5, some to MCP algor in general with ANY data]

1- What should kalamazoo to kalamazoo result in for
   the distance?  the path?  the trace of targets?

2- Would kalamazoo to chicago always result in the same distance
   answer as chicago to kalamazoo?  Would the route itself always
   be just the reverse?

3- What does the number of nodes in "trace of targets" tell us?

4- What's the last city printed out in "trace of targets" when
   going from kalamazoo to chicago?
   [Assume there's a valid path between the two].
   Is that guaranteed to be the last one in the list?

5- Which is the SECOND city that will print out in the "trace
   of targets" when going from kalamazoo to chicago?
   1) Plainwell (14 miles north of Kalamazoo)
   2) Coloma (45 minutes drive from Kalamazoo)
   3) Chicago (3 hours away - and the destination)
   4) PawPaw (because it's at least on the way to Chicago)
   5) Gary or Benton Harbor or. . . - could be anything on
     the final finished path to Chicago
   6) could be ANY city in the graph

6- Will every city on the final route appear in the "trace of
   targets"?  (except the start)

7- Will every city in the "trace of targets" be part of the
   final route?

8- Which module would have the code which actually print 1 target
   city name to TheLog file?
    1) drivingAppMain
    2) whatsCityName (in Map class)
    3) loadCityNames (in Map class)
    4) findPath (in ShortestPath class)
    5) initialize (in ShortestPath class)
    6) search (in ShortestPath class)
    7) reportAnswer (in ShortestPath class)

9- Can you describe what each of these modules does (as if you're
  writing a boxed comment at the top of a module) - in 1 or 2
  sentences?

10- What's a module (in your language)?

11- What's the max size that a typical module should be?

12- What does initialize (in ShortestPath class) do in pseudocode?

13- What are the 3 working-storage arrays used in Dijkstra's
   Algorithm called and used for?  [For full credit, apply the
   "commonly-used terminology" rule.  However, a more important
   rule you should always apply is the "same as the boss/specs'
   terminology" rule].

14- Given a specific graph, can you show me what the 3 arrays
   would look like AFTER initialize (in ShortestPath class) is run.
   -  Do I have to also tell you what startCity is?
   -  Do I also have to tell you what destinationCity is?

15- What's the pseudocode for GetRoadDistance(a,b) if the map edges
   were stored as:
   - AdjacencyLists?
   - an internal AdjacencyMatrix?
   - an external AdjacencyMatrix?

16- Could a final answer path ever be just one edge?


